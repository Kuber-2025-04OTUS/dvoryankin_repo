name: build-and-deploy

on:
  push:
    branches: [ "main", "project/managed-shop-otus" ]
  workflow_dispatch: {}

env:
  IMAGE_NAME: dvoryankin_repo/frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Normalize image name to lowercase
        id: repo_lc
        run: echo "repo_lc=$(echo 'ghcr.io/${{ github.repository }}/frontend' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: project/src/frontend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.repo_lc.outputs.repo_lc }}:${{ github.sha }}
            ${{ steps.repo_lc.outputs.repo_lc }}:latest
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repository }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Write kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV

      - name: Set IMAGE env
        run: |
          echo "IMAGE=$(echo 'ghcr.io/${{ github.repository }}/frontend' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: kubectl set image + rollout
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
          IMAGE: ${{ needs.build.outputs.image }}
          SHA: ${{ needs.build.outputs.sha }}
        run: |
          kubectl -n default set image deploy/frontend server="${IMAGE}:${SHA}" --record
          kubectl -n default rollout status deploy/frontend --timeout=180s