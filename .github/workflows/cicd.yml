name: build-and-deploy

on:
  push:
    branches: ["**"]

permissions:
  contents: read
  packages: write

env:
  IMAGE_REPO: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Normalize image name to lowercase
        id: img
        run: |
          echo "repo_lc=$(echo '${{ env.IMAGE_REPO }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image
        run: |
          IMAGE="$(echo 'ghcr.io/${{ github.repository }}' | tr '[:upper:]' '[:lower:]')/frontend:${{ github.sha }}"
          docker build -t "$IMAGE" -f project/src/frontend/Dockerfile .
          docker push "$IMAGE"

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.32.1"

      - name: Write kubeconfig from secret
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV

      - name: Set image and rollout
        run: |
          IMAGE="$(echo 'ghcr.io/${{ github.repository }}' | tr '[:upper:]' '[:lower:]')/frontend:${{ github.sha }}"
          kubectl -n default set image deploy/frontend frontend="$IMAGE"
          kubectl -n default rollout status deploy/frontend --timeout=180s
